{"version":3,"sources":["D:/AngularTut/MSG/My365MsgApp/src/app/authantication/authantication.service.ts"],"names":[],"mappings":"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","file":"common.chunk.js","sourcesContent":["import { Message } from './../shared/interfaces/message.interface';\nimport { User } from './../shared/interfaces/user.interface';\nimport { Router } from '@angular/router';\nimport { Http, Response } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport { Observable } from 'rxjs/Observable';\n// import { FirebaseListObservable, FirebaseObjectObservable } from 'angularfire2/database';\nimport { AngularFireDatabaseModule, AngularFireDatabase } from 'angularfire2/database';\nimport { AngularFireAuthModule, AngularFireAuth } from 'angularfire2/auth';\nimport { environment } from '../../environments/environment';\n// import 'rxjs/add/operator/toPromise';\n// import 'rxjs/add/operator/map';\n// import 'rxjs/add/operator/finally';\n\n@Injectable()\nexport class AuthanticationService {\n\n  private basePath = '/users';\n  users: User[] = null; //  list of objects\n  user: User = null; //   single object\n\n\n  constructor(\n    private db: AngularFireDatabase,\n    private afAuth: AngularFireAuth,\n    private router: Router\n  ) {\n  }\n  isAuthanticated() {\n    localStorage.getItem('email');\n  }\n\n\n  signup(senderName: string, username: string,\n    email: string, password: string, receiverName: string,\n    PassCode: string, startDate: Date) {\n    this.afAuth.auth.createUserWithEmailAndPassword(email, password)\n      .then(response => {\n        this.db.list('/users').push({\n          'senderName': senderName,\n          'username': username,\n          'email': email,\n          'receiverName': receiverName,\n          'PassCode': PassCode,\n          'startDate': startDate,\n          'messages': [\n            { 'content': 'message 0 text', 'viewDate': Date.now() },\n            { 'content': 'message 1 text', 'viewDate': Date.now() },\n            { 'content': 'message 2 text', 'viewDate': 0 }\n          ]\n        });\n        // console.log(response);\n        this.login(email, password);\n      })\n      .catch(\n      error => console.log(error)\n      );\n  }\n\n  login(email: string, password: string) {\n    this.afAuth.auth.signInWithEmailAndPassword(email, password).then(\n      response => {\n        this.afAuth.auth.currentUser.getToken()\n          .then((token: string) => {\n            // this.getusers(email);\n            localStorage.setItem('token', token);\n            localStorage.setItem('email', email);\n            this.router.navigate(['messages']);\n          }\n          );\n      }\n    )\n      .catch(\n      error => {\n        alert('there is a problem !: ' + error.message);\n        console.log(error);\n      }\n      );\n  }\n\n  logout() {\n    this.afAuth.auth.signOut();\n    this.router.navigate(['/']);\n    localStorage.clear();\n  }\n  PassCodeChker(passCode) {\n    const promise = new Promise((resolve, reject) => {\n      if (passCode) {\n        this.db.list('/users', ref => ref.orderByChild('PassCode').equalTo(passCode)).valueChanges()\n          .subscribe(response => {\n            if (response.length !== 0) {\n              resolve();\n            } else {\n              reject();\n            }\n          });\n      } else { reject(); }\n    });\n    return promise;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/AngularTut/MSG/My365MsgApp/src/app/authantication/authantication.service.ts"],"sourceRoot":"webpack:///"}